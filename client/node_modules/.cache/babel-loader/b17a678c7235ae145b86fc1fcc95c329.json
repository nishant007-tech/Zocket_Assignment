{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER } from './types'; //async() is thunk function for delay\n\nexport const registerUser = dataToSubmit => async dispatch => {\n  let responseData = await axios.post('/api/register', dataToSubmit);\n  return dispatch({\n    type: REGISTER_USER,\n    payload: responseData\n  });\n};\nexport const loginUser = dataToSubmit => async dispatch => {\n  const responseData = await axios.post('/api/login', dataToSubmit, {\n    withCredentials: true\n  });\n  console.log(responseData);\n  return dispatch({\n    type: LOGIN_USER,\n    payload: responseData\n  });\n};\nexport const authUser = () => async dispatch => {\n  let responseData = await axios.get('/api/authuser', {\n    withCredentials: true\n  });\n  return dispatch({\n    type: AUTH_USER,\n    payload: responseData\n  });\n};\nexport const logoutUser = () => async dispatch => {\n  const responseData = await axios.get('/api/logout', {\n    withCredentials: true\n  });\n  return dispatch({\n    type: LOGOUT_USER,\n    payload: responseData\n  });\n}; // withCredentials sets to true let us send the cookies stored over the browser to the server (like in api: req.cookie(\"jwt\"))","map":{"version":3,"sources":["/home/nishant007tech/Desktop/companies_assignments/Local_Help_Project/client/src/components/actions/actions.jsx"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","registerUser","dataToSubmit","dispatch","responseData","post","type","payload","loginUser","withCredentials","console","log","authUser","get","logoutUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,WAJJ,QAKO,SALP,C,CAOA;;AACA,OAAO,MAAMC,YAAY,GAAIC,YAAD,IAAkB,MAAOC,QAAP,IAAoB;AAC9D,MAAIC,YAAY,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,eAAX,EAA4BH,YAA5B,CAAzB;AACA,SAAOC,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAER,aADM;AAEZS,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CANM;AAOP,OAAO,MAAMI,SAAS,GAAIN,YAAD,IAAkB,MAAOC,QAAP,IAAoB;AAC3D,QAAMC,YAAY,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,YAAX,EAAyBH,YAAzB,EAAuC;AAC9DO,IAAAA,eAAe,EAAE;AAD6C,GAAvC,CAA3B;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACA,SAAOD,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAET,UADM;AAEZU,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CATM;AAUP,OAAO,MAAMQ,QAAQ,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAC9C,MAAIC,YAAY,GAAG,MAAMR,KAAK,CAACiB,GAAN,CAAU,eAAV,EAA2B;AAChDJ,IAAAA,eAAe,EAAE;AAD+B,GAA3B,CAAzB;AAGA,SAAON,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAEP,SADM;AAEZQ,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CARM;AASP,OAAO,MAAMU,UAAU,GAAG,MAAM,MAAOX,QAAP,IAAoB;AAChD,QAAMC,YAAY,GAAG,MAAMR,KAAK,CAACiB,GAAN,CAAU,aAAV,EAAyB;AAChDJ,IAAAA,eAAe,EAAE;AAD+B,GAAzB,CAA3B;AAGA,SAAON,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAEN,WADM;AAEZO,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CARM,C,CAUP","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\n\n//async() is thunk function for delay\nexport const registerUser = (dataToSubmit) => async (dispatch) => {\n    let responseData = await axios.post('/api/register', dataToSubmit)\n    return dispatch({\n        type: REGISTER_USER,\n        payload: responseData\n    })\n}\nexport const loginUser = (dataToSubmit) => async (dispatch) => {\n    const responseData = await axios.post('/api/login', dataToSubmit, {\n        withCredentials: true,\n    });\n    console.log(responseData)\n    return dispatch({\n        type: LOGIN_USER,\n        payload: responseData\n    })\n}\nexport const authUser = () => async (dispatch) => {\n    let responseData = await axios.get('/api/authuser', {\n        withCredentials: true,\n    })\n    return dispatch({\n        type: AUTH_USER,\n        payload: responseData\n    })\n}\nexport const logoutUser = () => async (dispatch) => {\n    const responseData = await axios.get('/api/logout', {\n        withCredentials: true,\n    })\n    return dispatch({\n        type: LOGOUT_USER,\n        payload: responseData\n    })\n}\n\n// withCredentials sets to true let us send the cookies stored over the browser to the server (like in api: req.cookie(\"jwt\"))"]},"metadata":{},"sourceType":"module"}